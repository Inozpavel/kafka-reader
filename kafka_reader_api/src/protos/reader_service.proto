syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option csharp_namespace = "Kafka.Reader.Api";
option go_package = "kafka_reader_api";

package kafka_reader_api;

service KafkaReader {
  rpc ReadMessages(ReadMessages.Request) returns (stream ReadMessages.Response);
}

message ReadMessages {
  message Request {
    repeated string brokers = 1;
    string topic = 2;
    MessageFormat format = 3;
    StartFrom start_from = 4;
    ReadLimit limit = 5;
  }
  message MessageFormat {
    oneof format {
      StringFormat string_format = 1;
      HexFormat hex_format = 2;
      ProtoFormat proto_format = 3;
    }
    message StringFormat {}
    message HexFormat {}
    message ProtoFormat {
      oneof decode_way {
        RawProtoFile raw_proto_file = 1;
      }
    }
    message RawProtoFile{
      string proto = 1;
    }
  }
  message StartFrom {
    oneof from {
      FromBeginning beginning = 1;
      FromLatest latest = 2;
      FromToday today = 3;
    }
    message FromBeginning {}
    message FromLatest {}
    message FromToday {}
  }
  message ReadLimit {
    oneof limit {
      MessageCount message_count = 1;
      ToDate to_date = 2;
    }
    message MessageCount {
      uint64 count = 1;
    }
    message ToDate {
      google.protobuf.Timestamp date = 1;
    }
  }

  message Response {
    optional KafkaMessage kafka_message = 1;
  }
  message KafkaMessage{
    google.protobuf.StringValue key = 1;
    google.protobuf.StringValue body = 2;
    map<string, string> headers = 3;
  }
}